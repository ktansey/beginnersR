9/101
2/101
29/101
8.91*20
0.0891 *20
0.0297*20
0.4851*20
0.0198*20
0.2871*20
2+1+10+1+1+6
1+1+2+2+5+9
12*14
256 * 12
library(readr)
mart_export <- read_csv("~/Documents/Courses_and_Workshops/W004_R_day_workshops/BeginnersR_Materials_Day1/data/mart_export.txt")
View(mart_export)
HP <- c("Harry Potter", "Ron Weasley", "Hermione Granger")
HG <- c("Katniss Everdeen", "Peeta Mellark", "Gale Hawthorne")
Book_PPL <- c(HP, HG)
Book_PPL
install.packages("ioslides")
install.packages("slidy")
install.packages("beamer")
library(readxl)
X13229_2017_124_MOESM4_ESM <- read_excel("~/Documents/Courses_and_Workshops/W004_R_day_workshops/BeginnersR_Materials_Day1/data/13229_2017_124_MOESM4_ESM.xlsx",
skip = 2)
View(X13229_2017_124_MOESM4_ESM)
colnames(X13229_2017_124_MOESM4_ESM)
View(X13229_2017_124_MOESM4_ESM)
View(X13229_2017_124_MOESM4_ESM)
summary(X13229_2017_124_MOESM4_ESM$gene_status)
ggplot(gapminder, aes(x = factor(continent), y = lifeExp)) +
geom_boxplot()
library(tidyverse)
library(gapminder)
ggplot(gapminder, aes(x = factor(continent), y = lifeExp)) +
geom_boxplot()
ggplot(gapminder, aes(x = factor(continent), y = lifeExp)) +
geom_boxplot() +
geom_point()
ggplot(gapminder, aes(x = factor(continent), y = lifeExp)) +
geom_boxplot() +
geom_jitter(alpha = 0.2)
ggplot(gapminder, aes(x = factor(continent), y = lifeExp)) +
geom_boxplot() +
geom_point(alpha = 0.2)
ggplot(gapminder, aes(x = factor(continent), y = lifeExp)) +
geom_boxplot() +
geom_jitter(alpha = 0.2)
ggplot(gapminder, aes(x = factor(continent), y = lifeExp)) +
geom_boxplot() +
geom_jitter(alpha = 0.1, shape = 1)
ggplot(gapminder, aes(x = factor(continent), y = lifeExp)) +
geom_boxplot() +
geom_jitter(alpha = 0.2, shape = 1)
library(readxl)
CHD8 <- read_excel("~/Documents/Courses_and_Workshops/W003_RNAseq_reference_genome/2017_12/Intro_to_R/data/13229_2017_124_MOESM4_ESM.xlsx", na = "NA", skip = 2)
ggplot(gapminder, aes(x = factor(continent), y = lifeExp)) +
geom_boxplot() +
geom_jitter(alpha = 0.2, shape = 1,
position = position_jitter(width = 0.1, height = 0.1))
ggplot(gapminder, aes(x = factor(continent), y = lifeExp)) +
geom_violin() +
geom_jitter(alpha = 0.2, shape = 1,
position = position_jitter(width = 0.1, height = 0.1))
head(CHD8)
mutate(CHD8,
threshold = abs(log2FC_NPC) > 2 & padj.NPC < 0.05)
CHD8_threshold <- mutate(CHD8,
threshold = abs(log2FC_NPC) > 2 & padj.NPC < 0.05)
View(CHD8_threshold)
CHD8_threshold <- mutate(CHD8,
threshold = abs(log2FC_NPC) > 2 & padj.NPC < 0.05)
ggplot(CHD8_threshold,
aes(x = log2FC_NPC, y = -log10(padj.NPC))) +
geom_point()
CHD8_threshold <- mutate(CHD8,
threshold = abs(log2FC_NPC) > 2 & padj.NPC < 0.05)
ggplot(CHD8_threshold,
aes(x = log2FC_NPC,
y = -log10(padj.NPC),
color = threshold)) +
geom_point()
CHD8_threshold <- mutate(CHD8,
threshold = abs(log2FC_NPC) > 2 & padj.NPC < 0.05)
ggplot(CHD8_threshold,
aes(x = log2FC_NPC,
y = -log10(padj.NPC),
color = threshold)) +
geom_point() +
scale_color_manual(values = c("black", "red"))
CHD8_threshold <- mutate(CHD8,
threshold = abs(log2FC_NPC) > 2 & padj.NPC < 0.05)
ggplot(CHD8_threshold,
aes(x = log2FC_NPC,
y = -log10(padj.NPC),
color = threshold)) +
geom_point() +
scale_color_manual(values = c("black", "red")) +
theme(legend.position = "none")
CHD8_threshold <- mutate(CHD8,
threshold = abs(log2FC_NPC) > 2 & padj.NPC < 0.05)
ggplot(CHD8_threshold,
aes(x = log2FC_NPC,
y = -log10(padj.NPC),
color = threshold)) +
geom_point() +
scale_color_manual(values = c("black", "red")) +
theme(legend.position = "none") +
xlab("log 2 Fold Change NPC")
CHD8_threshold <- mutate(CHD8,
threshold = abs(log2FC_NPC) > 2 & padj.NPC < 0.05)
ggplot(CHD8_threshold,
aes(x = log2FC_NPC,
y = -log10(padj.NPC),
color = threshold)) +
geom_point() +
scale_color_manual(values = c("black", "red")) +
theme(legend.position = "none") +
xlab("log 2 Fold Change NPC") +
ylab("-log 10 adjusted p-value NPC") +
xlim(-15, 15) +
ylim(0, 50)
CHD8_threshold <- mutate(CHD8,
threshold = abs(log2FC_NPC) > 2 & padj.NPC < 0.05)
ggplot(CHD8_threshold,
aes(x = log2FC_NPC,
y = -log10(padj.NPC),
color = threshold)) +
geom_point() +
scale_color_manual(values = c("black", "red")) +
theme(legend.position = "none") +
xlab("log 2 Fold Change NPC") +
ylab("-log 10 adjusted p-value NPC") +
xlim(-15, 15) +
ylim(0, 50) +
theme_bw()
CHD8_threshold <- mutate(CHD8,
threshold = abs(log2FC_NPC) > 2 & padj.NPC < 0.05)
ggplot(CHD8_threshold,
aes(x = log2FC_NPC,
y = -log10(padj.NPC),
color = threshold)) +
geom_point() +
scale_color_manual(values = c("black", "red")) +
theme_bw() +
theme(legend.position = "none") +
xlab("log 2 Fold Change NPC") +
ylab("-log 10 adjusted p-value NPC") +
xlim(-15, 15) +
ylim(0, 50)
CHD8_threshold <- mutate(CHD8,
threshold = abs(log2FC_NPC) > 2 & padj.NPC < 0.05)
ggplot(CHD8_threshold,
aes(x = log2FC_NPC,
y = -log10(padj.NPC),
color = threshold)) +
geom_point() +
scale_color_manual(values = c("black", "red")) +
theme_bw() +
theme(legend.position = "none") +
xlab("log 2 Fold Change NPC") +
ylab("-log 10 adjusted p-value NPC") +
xlim(-15, 15) +
ylim(0, 50) +
ggtitle("Something about gene expression")
CHD8_heatmap <- CHD8 %>%
arrange(padj.NPC) %>%
top_n(-100, wt = padj.NPC) %>%
select(gene_name, contains("FPKM")) %>%
column_to_rownames(var = "gene_name") %>%
data.matrix()
head(CHD8_heatmap)
filter(CHD8, gene_name == "NLRP2")
test <- filter(CHD8, gene_name == "NLRP2")
View(test)
library(tidyverse)
CHD8_heatmap <- CHD8 %>%
arrange(padj.NPC) %>%
top_n(-100, wt = padj.NPC) %>%
select(gene_name, contains("FPKM")) %>%
column_to_rownames(var = "gene_name") %>%
data.matrix()
CHD8_heatmap <- CHD8 %>%
arrange(padj.NPC) %>%
top_n(-100, wt = padj.NPC) %>%
select(gene_name, contains("FPKM")) %>%
column_to_rownames(var = "gene_name") %>%
data.matrix()
heatmap(CHD8_heatmap)
159 + 21 + 96 + 1000 + 400 + 30 + 16.85 + 40
1200 * 2
2400 - 1800
60*45*120
100*55*90
100*55*90 > 60*45*120
100*55*90 - 60*45*120
library(stringr)
library(reshape2)
library(ggplot2)
library(dplyr)
library(knitr)
library(grid)
# Load the names of all the cell types in
cell_types <- read.table("/Users/katherine/Dropbox/ldsc/cell_types.txt", h=T)
cell_types$Cell_Marks = paste(cell_types$cell_type, cell_types$mark, sep="_")
names(cell_types)[names(cell_types)=="file_number"] <- "NUMBER"
cell_types_1 <- cell_types[,c(1,4)]
AD_TF <- read.table("/Users/katherine/Documents/Data_Clinic_Work/Matthew_Hill/microgilia/ldscore_TF/AD_TF_ldscore")
names(AD_TF) <- c("TF", "Category", "Prop._SNPs", "Prop._h2", "Prop._h2_std_error", "Enrichment", "Enrichment_std_error", "Enrichment_p", "Coefficient", "Coefficient_std_error", "Coefficient_zscore")
AD_TF$pvalue <- ifelse(AD_TF$Coefficient_zscore > 0,
2*pnorm(-abs(AD_TF$Coefficient_zscore)),
1-(2*pnorm(-abs(AD_TF$Coefficient_zscore))))
AD_TF$neglog10p <- -log10(AD_TF$pvalue)
sig = -log10(0.05/nrow(AD_TF))
### multiple correction line
print(sig)
### make table for top results
kable(AD_TF %>%
select(label, Prop._SNPs, Prop._h2, Coefficient_z.score, pvalue, neglog10p) %>%
arrange(pvalue))
AD_TF %>%
filter(TF %in% c("Sfpi1", "RUNX", "TFs_noAnns", "Spdef", "Mef2a", "CEBPE")) %>%
select(TF, pvalue)
View(AD_TF)
30*30
install.packages(c("callr", "descr", "digest", "dotCall64", "fields", "ggraph", "gutenbergr", "haven", "hexbin", "Hmisc", "hms", "htmlTable", "htmlwidgets", "irlba", "kableExtra", "knitr", "MASS", "matrixStats", "mgcv", "mvtnorm", "Rcpp", "reprex", "rpart", "tibble", "tidyr", "urltools", "xml2"))
library(ggplot2)
library(grid)
library(plyr)
setwd("/Users/katherine/Documents/Data_Clinic/Clinic_Managment/plots/")
library(ggplot2)
library(grid)
library(plyr)
setwd("/Users/katherine/Documents/Data_Clinic/Clinic_Managment/plots/")
inFiles <- c("dataclinic_heath_mi", "dataclinic_haydnellis_mi")
docDate <- format(Sys.Date(), format="%d/%b/%Y")
plotTexts <- c(paste("Title: Data Clinic Management Information  ", docDate,
"\nAuthors: Annette Evans, Chao Huang, Daniel Farewell, Daniel Pass, David Gillespie, Emily Baker,
Giles Greene, John Watkins, Katherine Tansey, Marc Naven, Matthew Bull, Peter Morgan,
\nRenata Medeiros Mirra, Robert Andrews, Samuel Touchard, Stephen Edwards, Timothy Stone
\n\nClinic time and venue: Every Thursday, 15:00-16:00, Ground Floor Coffee Bar,
Haydn Ellis Building, Maindy Road\nClinic contact: data-clinic@cardiff.ac.uk\n\nOverview: ANY
University member of staff can bring ANY data issue for discussion for advice in Bioinformatics,
Statistics or R programming.\nWork performed is kept within the discussion and is not performed
outside of the clinic.\nDrop-in and no fee.\n\nTypical questions: 'Am I using the correct statistical
test for my data?' 'How do I analyse my microarray data?' 'What training is available in Statistics
or Bioinformatics?'\n'What online resources can help me make sense of my list of genes?'", sep=""),
paste("Title: Data Clinic Management Information  ", docDate,
"\nAuthors: Annette Evans, Chao Huang, Daniel Farewell, Daniel Pass, David Gillespie, Emily Baker,
Giles Greene, John Watkins, Katherine Tansey, Marc Naven, Matthew Bull, Peter Morgan,
\nRenata Medeiros Mirra, Robert Andrews, Samuel Touchard, Stephen Edwards, Timothy Stone
\n\nClinic time and venue: Every Thursday, 15:00-16:00, Ground Floor Coffee Bar,
Haydn Ellis Building, Maindy Road\nClinic contact: data-clinic@cardiff.ac.uk\n\nOverview: ANY
University member of staff can bring ANY data issue for discussion for advice in Bioinformatics,
Statistics or R programming.\nWork performed is kept within the discussion and is not performed
outside of the clinic.\nDrop-in and no fee.\n\nTypical questions: 'Am I using the correct statistical
test for my data?' 'How do I analyse my microarray data?' 'What training is available in Statistics
or Bioinformatics?'\n'What online resources can help me make sense of my list of genes?'", sep=""))
## read data in csv
for (plotMonth in c("all", "12", "6")) {
count <- 0
for (inFile in inFiles) {
count <- count + 1
plotText <- plotTexts[count]
rawData <- read.csv(paste(inFile, ".csv", sep=""), header=T, sep=",", quote = "\"")
inData <- rawData[rawData$date != "",]
## subset by last 6 months
if (plotMonth != "all") {
lateDate <- tail(inData, n=1)$date
earlyDate <- seq(as.Date(lateDate),
length = 2, by = paste("-", plotMonth, " months", sep=""))[2]
inData <- inData[as.Date(inData$date) >= as.Date(earlyDate) &
as.Date(inData$date) <= as.Date(lateDate),]
}
## report helper statistics
stringTally <- toString(inData$Clinicians)
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
vectorTally <- trim(unlist(strsplit(stringTally, ",")))
tallyTable <- table(vectorTally)
print (inFile)
print (plotMonth)
print(tallyTable)
pdf(file=paste(inFile, ".months", plotMonth, ".pdf", sep=""), onefile=T, width=12, height=8)
layout(matrix(c(1, 2), nrow=2, ncol=1, byrow=TRUE), heights=c(1, 1.2))
## START: top text #####
plot1 <- plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.0, y = 0.5, plotText, adj=0, cex=0.7, col="black")
# print(plot1, vp =(1, 1))
## END: top text #####
## START: attendance plot #####
barAxisSize <- 0.6
barTitleSize <- 0.6
barMainSize <- 0.8
opX <- 5
opY <- 5
opZ <- 1
opA <- 5
op <- par(mar = c(opX, opY, opZ, opA) + 0.1)
allDates <- seq(from=as.Date(inData$date[1]), by=7,
to=as.Date(inData$date[length(inData$date)]))
x <- data.frame(date=as.Date(inData$date), type=rep(1, length(inData$date)))
y <- data.frame(date=allDates)
xy <- merge(x, y, by="date", all=T)
xy[is.na(xy)] <- 0
dateTally <- xtabs(xy$type~xy$date)
timePlot <- barplot(as.vector(dateTally), border=NA, cex.axis=barAxisSize,
cex.lab=barTitleSize, main="number of people attending data clinic",
xlab="date", ylab=paste("# people (total: ", sum(dateTally), ")", sep=""),
cex.main=barMainSize, cex.names=barAxisSize, col="cadetblue3")
axis(side=4, cex.axis=barAxisSize)
text(timePlot, par("usr")[3] - 0.09, srt = 55, adj = 1, labels=format(y$date, format="%d-%b-%Y"),
xpd=TRUE, offset=1, col="black", cex=0.5)
abline(h=mean(dateTally), col="red", label="mean", lty=3)
text(1.5, mean(dateTally) + 0.2, paste("mean (", round(mean(dateTally), 2), ")", sep=""),
col="red", cex=barAxisSize)
par(op) ## reset
## END: attendance plot #####
layout(matrix(c(1, 2, 3, 4, 5, 6), nrow=2, ncol=3, byrow=TRUE), heights=c(1, 1, 1))
barAxisSize <- 0.7
labelTextSize <- 0.7
barTitleSize <- 0.7
barMainSize <- 1.0
opX <- 5
opY <- 7.5
opZ <- 1
opA <- 1
## START: duration plot #####
op <- par(mar = c(opX, opY, opZ, opA) + 0.1)
timeVocab <- c("0-10", "10-20", "20-30", "30-40", "40-50", "50-60", "60+")
duration <- table(factor(inData$duration[inData$duration != ""], timeVocab))
# REQUIRE CHECK FOR CONTROLLED ALLOWED TERMS IN COLUMN
durationBP <- barplot(duration, main="consultation duration (minutes)",
xlab=paste("# people (total: ", sum(duration), ")", sep=""),
horiz=T, las=1, border=NA, cex.axis=barAxisSize, cex.names=barAxisSize,
cex.main=barMainSize,
cex.lab=barTitleSize,
xlim=c(0, round_any(max(duration), 5, f=ceiling)),
col="cornsilk2")
text(0, durationBP, paste(duration, " (", round(((duration / sum(duration)) * 100), 1), "%)", sep=""),
cex=labelTextSize, pos=4, col="red")
par(op) ## reset
## END: success/fail plot #####
## START: success/fail plot #####
op <- par(mar = c(opX, opY, opZ, opA) + 0.1)
outcomeVocab <- c("success", "partial success", "referral", "out-of-scope", "fail")
outcome <- table(factor(inData$outcome[inData$outcome != ""], outcomeVocab))
# REQUIRE CHECK FOR CONTROLLED ALLOWED TERMS IN COLUMN
outcomeBP <- barplot(outcome, main="consultation outcome",
xlab=paste("# people (total: ", sum(outcome), ")", sep=""),
horiz=T, las=1, border=NA, cex.axis=barAxisSize, cex.names=barAxisSize,
cex.main=barMainSize, cex.lab=barTitleSize, xlim=c(0, round_any(max(outcome), 5, f=ceiling)),
col="cornsilk2")
text(0, outcomeBP, paste(outcome, " (", round(((outcome / sum(outcome)) * 100), 1), "%)", sep=""),
cex=labelTextSize, pos=4, col="red")
par(op) ## reset
## END: success/fail plot #####
## START: job title plot #####
op <- par(mar = c(opX, opY, opZ, opA) + 0.1)
jobTitle <- sort(table(factor(inData$position[inData$position != ""], unique(inData$position))), decreasing=T)
# REQUIRE CHECK FOR CONTROLLED ALLOWED TERMS IN COLUMN
jobTitleBP <- barplot(jobTitle, main="client job title",
xlab=paste("# people (total: ", sum(jobTitle), ")", sep=""),
horiz=T, las=1, border=NA, cex.axis=barAxisSize, cex.names=barAxisSize,
cex.main=barMainSize, cex.lab=barTitleSize, xlim=c(0, round_any(max(jobTitle), 5, f=ceiling)),
col="cadetblue2")
text(0, jobTitleBP, paste(jobTitle, " (", round(((jobTitle / sum(jobTitle)) * 100), 1), "%)", sep=""),
cex=labelTextSize, pos=4, col="red")
par(op) ## reset
## END: job title plot #####
## START: institute plot #####
op <- par(mar = c(opX, opY, opZ, opA) + 0.1)
affiliation <- sort(table(factor(inData$affiliation[inData$affiliation != ""], unique(inData$affiliation))), decreasing=T)
# REQUIRE CHECK FOR CONTROLLED ALLOWED TERMS IN COLUMN
affiliationBP <- barplot(affiliation, main="client affiliation",
xlab=paste("# people (total: ", sum(affiliation), ")", sep=""), horiz=T, las=1,
border=NA, cex.axis=barAxisSize, cex.names=barAxisSize, cex.main=barMainSize,
cex.lab=barTitleSize, xlim=c(0, round_any(max(affiliation), 5, f=ceiling)),
col="cadetblue2")
text(0, affiliationBP, paste(affiliation, " (", round(((affiliation / sum(affiliation)) * 100), 1), "%)", sep=""),
cex=labelTextSize, pos=4, col="red")
par(op) ## reset
## END: job title plot #####
## START: data type plot #####
op <- par(mar = c(opX, opY, opZ, opA) + 0.1)
dataType <- sort(table(factor(inData$subjectType[inData$subjectType != ""], unique(inData$subjectType))), decreasing=T)
# REQUIRE CHECK FOR CONTROLLED ALLOWED TERMS IN COLUMN
dataTypeBP <- barplot(dataType, main="query data type",
xlab=paste("# people (total: ", sum(dataType), ")", sep=""), horiz=T,
las=1, border=NA, cex.axis=barAxisSize, cex.names=barAxisSize,
cex.main=barMainSize, cex.lab=barTitleSize, xlim=c(0, round_any(max(dataType), 5, f=ceiling)),
col="lightgoldenrod1")
text(0, dataTypeBP, paste(dataType, " (", round(((dataType / sum(dataType)) * 100), 1), "%)", sep=""),
cex=labelTextSize, pos=4, col="red")
par(op) ## reset
## END: job title plot #####
## START: job type plot #####
op <- par(mar = c(opX, opY, opZ, opA) + 0.1)
jobType <- sort(table(factor(inData$jobType[inData$jobType != ""], unique(inData$jobType))), decreasing=T)
# REQUIRE CHECK FOR CONTROLLED ALLOWED TERMS IN COLUMN
jobTypeBP <- barplot(jobType, main="query analysis type",
xlab=paste("# people (total: ", sum(jobType), ")", sep=""), horiz=T, las=1, border=NA,
cex.axis=barAxisSize, cex.names=barAxisSize, cex.main=barMainSize, cex.lab=barTitleSize,
xlim=c(0, round_any(max(jobType), 5, f=ceiling)), col="lightgoldenrod1")
text(0, jobTypeBP, paste(jobType, " (", round(((jobType / sum(jobType)) * 100), 1), "%)", sep=""),
cex=labelTextSize, pos=4, col="red")
par(op) ## reset
## END: job title plot #####
## START: tally of number of times worked #####
## END: tally of number of times worked #####
dev.off()
}
}
data.frame()
head(starwars)
library(tidyverse)
head(starwars)
kable(mtcars)
View(durationBP)
View(jobTitleBP)
paste("P", seq(0,100))
paste("P", seq(0,100), sep = "")
seq(0,10)
data.frame(people = paste("P", seq(0,100), sep = ""),
replicate(12,sample(0:10,1000,rep=TRUE)))
data.frame(replicate(12,sample(0:10,1000,rep=TRUE)))
test <- data.frame(replicate(12,sample(0:10,1000,rep=TRUE)))
test$people <- paste("P", seq(0,100), sep = "")
View(test)
test <- data.frame(replicate(12,sample(0:10,1000,rep=TRUE)))
test$people <- paste("P", seq(0,1000), sep = "")
paste("P", seq(0,1000), sep = "")
test <- data.frame(replicate(12,sample(0:10,1001,rep=TRUE)))
test$people <- paste("P", seq(0,1000), sep = "")
View(test)
library(stringr)
test <- data.frame(replicate(12,sample(0:10,1001,rep=TRUE)))
test$people <- str_pad(paste("P", seq(0,1000), sep = ""), 4, pad = "0")
View(test)
library(stringr)
test <- data.frame(replicate(12,sample(0:10,1001,rep=TRUE)))
test$people <- paste("P", str_pad(seq(0,1000), 4, pad = "0"), sep = "")
View(test)
library(stringr)
test <- data.frame(replicate(12,sample(0:10,1000,rep=TRUE)))
test$people <- paste("P", str_pad(seq(1:1000), 4, pad = "0"), sep = "")
View(test)
library(stringr)
test <- data.frame(replicate(12,sample(0:10,1000,rep=TRUE)))
test$people <- paste("P", str_pad(seq(1:1000), 4, pad = "0"), sep = "")
colnames(test) <- c("Time1", "Time2", "Time3", "Time4", "Time5",
"Time6", "Time7", "Time8", "Time9", "Time10",
"Time11", "Time12", "People")
test <- test[, c(13, 1:12)]
View(test)
library(stringr)
test <- data.frame(replicate(12,sample(0:10,1000,rep=TRUE)))
test$people <- paste("P", str_pad(seq(1:1000), 4, pad = "0"), sep = "")
colnames(test) <- c("Time1", "Time2", "Time3", "Time4", "Time5",
"Time6", "Time7", "Time8", "Time9", "Time10",
"Time11", "Time12", "People")
test <- test[, c(13, 1:12)]
write.table("/Users/katherine/Documents/Courses_and_Workshops/W004_Beginners_R_2day/Feb_2018/BeginnersR_Materials/data/people_behavior_measure.txt", sep = "\t", col.names = TRUE,
row.names = FALSE, quote = FALSE)
write.table("/Users/katherine/Documents/Courses_and_Workshops/W004_Beginners_R_2day/Feb_2018/BeginnersR_Materials/data/people_behavior_measure.txt", sep = "\t", col.names = TRUE,
row.names = FALSE, quote = FALSE)
getwd()
library(stringr)
test <- data.frame(replicate(12,sample(0:10,1000,rep=TRUE)))
test$people <- paste("P", str_pad(seq(1:1000), 4, pad = "0"), sep = "")
colnames(test) <- c("Time1", "Time2", "Time3", "Time4", "Time5",
"Time6", "Time7", "Time8", "Time9", "Time10",
"Time11", "Time12", "People")
test <- test[, c(13, 1:12)]
setwd("~/Documents/Courses_and_Workshops/W004_Beginners_R_2day/Feb_2018/BeginnersR_Materials/data/")
write.table("people_behavior_measure.txt", sep = "\t", col.names = TRUE,
row.names = FALSE, quote = FALSE)
library(stringr)
test <- data.frame(replicate(12,sample(0:10,1000,rep=TRUE)))
test$people <- paste("P", str_pad(seq(1:1000), 4, pad = "0"), sep = "")
colnames(test) <- c("Time1", "Time2", "Time3", "Time4", "Time5",
"Time6", "Time7", "Time8", "Time9", "Time10",
"Time11", "Time12", "People")
test <- test[, c(13, 1:12)]
setwd("~/Documents/Courses_and_Workshops/W004_Beginners_R_2day/Feb_2018/BeginnersR_Materials/data/")
write.table(test, file = "people_behavior_measure.txt", sep = "\t", col.names = TRUE,
row.names = FALSE, quote = FALSE)
head(stroms)
head(storms)
data(president)
head(airquality)
data(french_fries)
require(reshape2)
data(french_fries)
head(french_fries)
head(Indometh)
big5 <- read.table("big5_data_simple.csv")
big5 <- read.csv("big5_data_simple.csv")
head(big5)
task1 <- read.table("people_behavior_measure.txt", sep = "\t")
task1 <- read.table("people_behavior_measure.txt", sep = "\t", head = T)
View(task1)
head(task1)
head(diamonds)
ggplot(mtcars)
34.99 + 27.99 + 31.49 + 27.99
122.46 * 0.21
(122.46 * 0.21) + 8
86.51 * 0l8
86.51 * 0.8
86.51 * 1.08
((86.51 * 1.08) * .2) + 8
